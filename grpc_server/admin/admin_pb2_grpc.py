# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import admin_pb2 as admin__pb2


class AdminServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.list = channel.unary_unary(
                '/admin.AdminService/list',
                request_serializer=admin__pb2.AdminListRequest.SerializeToString,
                response_deserializer=admin__pb2.AdminListResponse.FromString,
                )
        self.get = channel.unary_unary(
                '/admin.AdminService/get',
                request_serializer=admin__pb2.AdminRequest.SerializeToString,
                response_deserializer=admin__pb2.AdminResponse.FromString,
                )
        self.create = channel.unary_unary(
                '/admin.AdminService/create',
                request_serializer=admin__pb2.AdminCreateRequest.SerializeToString,
                response_deserializer=admin__pb2.AdminCreateResponse.FromString,
                )
        self.update = channel.unary_unary(
                '/admin.AdminService/update',
                request_serializer=admin__pb2.AdminUpdateRequest.SerializeToString,
                response_deserializer=admin__pb2.AdminUpdateResponse.FromString,
                )
        self.delete = channel.unary_unary(
                '/admin.AdminService/delete',
                request_serializer=admin__pb2.AdminDeleteRequest.SerializeToString,
                response_deserializer=admin__pb2.AdminDeleteResponse.FromString,
                )
        self.login = channel.unary_unary(
                '/admin.AdminService/login',
                request_serializer=admin__pb2.AdminLoginRequest.SerializeToString,
                response_deserializer=admin__pb2.AdminLoginResponse.FromString,
                )
        self.logout = channel.unary_unary(
                '/admin.AdminService/logout',
                request_serializer=admin__pb2.AdminLogoutRequest.SerializeToString,
                response_deserializer=admin__pb2.AdminLogoutResponse.FromString,
                )
        self.otp = channel.unary_unary(
                '/admin.AdminService/otp',
                request_serializer=admin__pb2.AdminOtpRequest.SerializeToString,
                response_deserializer=admin__pb2.AdminOtpResponse.FromString,
                )
        self.verifyOtp = channel.unary_unary(
                '/admin.AdminService/verifyOtp',
                request_serializer=admin__pb2.AdminVerifyOtpRequest.SerializeToString,
                response_deserializer=admin__pb2.AdminVerifyOtpResponse.FromString,
                )
        self.resetPassword = channel.unary_unary(
                '/admin.AdminService/resetPassword',
                request_serializer=admin__pb2.AdminResetPasswordRequest.SerializeToString,
                response_deserializer=admin__pb2.AdminResetPasswordResponse.FromString,
                )


class AdminServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def list(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def otp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def verifyOtp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def resetPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'list': grpc.unary_unary_rpc_method_handler(
                    servicer.list,
                    request_deserializer=admin__pb2.AdminListRequest.FromString,
                    response_serializer=admin__pb2.AdminListResponse.SerializeToString,
            ),
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=admin__pb2.AdminRequest.FromString,
                    response_serializer=admin__pb2.AdminResponse.SerializeToString,
            ),
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=admin__pb2.AdminCreateRequest.FromString,
                    response_serializer=admin__pb2.AdminCreateResponse.SerializeToString,
            ),
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=admin__pb2.AdminUpdateRequest.FromString,
                    response_serializer=admin__pb2.AdminUpdateResponse.SerializeToString,
            ),
            'delete': grpc.unary_unary_rpc_method_handler(
                    servicer.delete,
                    request_deserializer=admin__pb2.AdminDeleteRequest.FromString,
                    response_serializer=admin__pb2.AdminDeleteResponse.SerializeToString,
            ),
            'login': grpc.unary_unary_rpc_method_handler(
                    servicer.login,
                    request_deserializer=admin__pb2.AdminLoginRequest.FromString,
                    response_serializer=admin__pb2.AdminLoginResponse.SerializeToString,
            ),
            'logout': grpc.unary_unary_rpc_method_handler(
                    servicer.logout,
                    request_deserializer=admin__pb2.AdminLogoutRequest.FromString,
                    response_serializer=admin__pb2.AdminLogoutResponse.SerializeToString,
            ),
            'otp': grpc.unary_unary_rpc_method_handler(
                    servicer.otp,
                    request_deserializer=admin__pb2.AdminOtpRequest.FromString,
                    response_serializer=admin__pb2.AdminOtpResponse.SerializeToString,
            ),
            'verifyOtp': grpc.unary_unary_rpc_method_handler(
                    servicer.verifyOtp,
                    request_deserializer=admin__pb2.AdminVerifyOtpRequest.FromString,
                    response_serializer=admin__pb2.AdminVerifyOtpResponse.SerializeToString,
            ),
            'resetPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.resetPassword,
                    request_deserializer=admin__pb2.AdminResetPasswordRequest.FromString,
                    response_serializer=admin__pb2.AdminResetPasswordResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'admin.AdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AdminService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admin.AdminService/list',
            admin__pb2.AdminListRequest.SerializeToString,
            admin__pb2.AdminListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admin.AdminService/get',
            admin__pb2.AdminRequest.SerializeToString,
            admin__pb2.AdminResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admin.AdminService/create',
            admin__pb2.AdminCreateRequest.SerializeToString,
            admin__pb2.AdminCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admin.AdminService/update',
            admin__pb2.AdminUpdateRequest.SerializeToString,
            admin__pb2.AdminUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admin.AdminService/delete',
            admin__pb2.AdminDeleteRequest.SerializeToString,
            admin__pb2.AdminDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admin.AdminService/login',
            admin__pb2.AdminLoginRequest.SerializeToString,
            admin__pb2.AdminLoginResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admin.AdminService/logout',
            admin__pb2.AdminLogoutRequest.SerializeToString,
            admin__pb2.AdminLogoutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def otp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admin.AdminService/otp',
            admin__pb2.AdminOtpRequest.SerializeToString,
            admin__pb2.AdminOtpResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def verifyOtp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admin.AdminService/verifyOtp',
            admin__pb2.AdminVerifyOtpRequest.SerializeToString,
            admin__pb2.AdminVerifyOtpResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def resetPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admin.AdminService/resetPassword',
            admin__pb2.AdminResetPasswordRequest.SerializeToString,
            admin__pb2.AdminResetPasswordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
